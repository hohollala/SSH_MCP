[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ssh-mcp-server"
version = "0.1.0"
description = "Model Context Protocol (MCP) server for SSH operations with AI clients"
readme = "README.md"
license = "MIT"
authors = [
    {name = "SSH MCP Server Team", email = "team@ssh-mcp-server.dev"}
]
maintainers = [
    {name = "SSH MCP Server Team", email = "team@ssh-mcp-server.dev"}
]
keywords = [
    "mcp",
    "model-context-protocol", 
    "ssh",
    "ai",
    "claude",
    "gemini",
    "remote-server",
    "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "paramiko>=3.0.0,<4.0.0",
    "cryptography>=3.4.8,<42.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0"
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0"
]
docs = [
    "sphinx>=5.0.0,<7.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "myst-parser>=1.0.0,<2.0.0"
]

[project.urls]
Homepage = "https://github.com/ssh-mcp-server/ssh-mcp-server"
Documentation = "https://ssh-mcp-server.readthedocs.io/"
Repository = "https://github.com/ssh-mcp-server/ssh-mcp-server.git"
"Bug Tracker" = "https://github.com/ssh-mcp-server/ssh-mcp-server/issues"
Changelog = "https://github.com/ssh-mcp-server/ssh-mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
ssh-mcp-server = "ssh_mcp_server.__main__:cli_main"

[tool.setuptools]
packages = ["ssh_mcp_server"]

[tool.setuptools.package-data]
ssh_mcp_server = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ssh_mcp_server"]
known_third_party = ["paramiko", "cryptography"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "paramiko.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=ssh_mcp_server",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["ssh_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

# Flake8 configuration (in setup.cfg format for compatibility)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox"
]